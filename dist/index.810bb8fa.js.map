{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n  id = (Date.now() + ``).slice(-10);\n  clicks = 0;\n\n  constructor(coords, distance, duration) {\n    // this.date =..\n    // this.id = ..\n    this.coords = coords; //[lat, lng]\n    this.distance = distance; //in km\n    this.duration = duration; //in min\n  }\n\n  _setDescription() {\n    // prettier-ignore\n\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n\n    this.description = `${this.type[0].toUpperCase()}${this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  click() {\n    this.clicks++;\n  }\n}\n\nclass Running extends Workout {\n  type = `running`;\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.cadence = cadence;\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // min/km\n    this.pace = this.duration / this.distance;\n    return this.pace;\n  }\n}\n\nclass Cycling extends Workout {\n  type = `cycling`;\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.elevationGain = elevationGain;\n    this.calcSpeed();\n    this._setDescription();\n  }\n  calcSpeed() {\n    // km/h\n    this.speed = this.distance / (this.duration / 60);\n    return this.speed;\n  }\n}\n\n//////////////////////////////////\n// APPLICATION ARCHITECTURE\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass App {\n  #map;\n  #mapZoomLevel = 13;\n  #mapEvent;\n  #workouts = [];\n\n  constructor() {\n    // Get user's position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getLocalStorage();\n\n    // Attach event handlers\n    form.addEventListener(`submit`, this._newWorkout.bind(this));\n\n    inputType.addEventListener(`change`, this._toggleElevationField);\n\n    containerWorkouts.addEventListener(`click`, this._moveToPopup.bind(this));\n  }\n\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(\n        this._loadMap.bind(this),\n        function () {\n          alert(`Could not get your position`);\n        }\n      );\n  }\n\n  _loadMap(position) {\n    const { latitude } = position.coords;\n    const { longitude } = position.coords;\n    console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    const coords = [latitude, longitude];\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n    //   console.log(map);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on maps\n    this.#map.on(`click`, this._showForm.bind(this));\n\n    // called here cos now map is available\n    this.#workouts.forEach(work => {\n      this._renderWorkoutMarker(work);\n    });\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    form.classList.remove(`hidden`);\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // Empty inputs\n    inputDistance.value =\n      inputDuration.value =\n      inputCadence.value =\n      inputElevation.value =\n        ``;\n\n    form.style.display = `none`;\n    form.classList.add(`hidden`);\n    setTimeout(() => (form.style.display = `grid`), 1000);\n  }\n\n  _toggleElevationField() {\n    inputElevation.closest(`.form__row`).classList.toggle(`form__row--hidden`);\n    inputCadence.closest(`.form__row`).classList.toggle(`form__row--hidden`);\n  }\n\n  _newWorkout(e) {\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n    const { lat, lng } = this.#mapEvent.latlng;\n    let workout;\n\n    // If workout is running, create running object\n\n    if (type === `running`) {\n      const cadence = +inputCadence.value;\n\n      // Check if data is valid\n      if (\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert(`inputs have to be positive numbers`);\n\n      workout = new Running([lat, lng], distance, duration, cadence);\n    }\n\n    // If workout is cycling, create cycling object\n\n    if (type === `cycling`) {\n      const elevation = +inputElevation.value;\n      // Check if data is valid\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert(`inputs have to be positive numbers`);\n\n      workout = new Cycling([lat, lng], distance, duration, elevation);\n    }\n\n    // Add new object to workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkout(workout);\n\n    // Hide form and clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === `running` ? `🏃‍♂️` : `🚴‍♀️`} ${workout.description}`\n      )\n      .openPopup();\n  }\n\n  _renderWorkout(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n          <h2 class=\"workout__title\">${workout.description}</h2>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">${\n              workout.type === `running` ? `🏃‍♂️` : `🚴‍♀️`\n            } </span>\n            <span class=\"workout__value\">${workout.distance}</span>\n            <span class=\"workout__unit\">km</span>\n          </div>\n          <div class=\"workout__details\">\n            <span class=\"workout__icon\">⏱</span>\n            <span class=\"workout__value\">${workout.duration}</span>\n            <span class=\"workout__unit\">min</span>\n          </div>\n\n         \n    `;\n\n    if (workout.type === `running`) {\n      html += `\n      <div class=\"workout__details\">\n      <span class=\"workout__icon\">⚡️</span>\n      <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n      <span class=\"workout__unit\">min/km</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">🦶🏼</span>\n      <span class=\"workout__value\">${workout.cadence}</span>\n      <span class=\"workout__unit\">spm</span>\n    </div>\n  </li>\n        `;\n    }\n\n    if (workout.type === `cycling`) {\n      html += `\n      <div class=\"workout__details\">\n      <span class=\"workout__icon\">⚡️</span>\n      <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n      <span class=\"workout__unit\">km/h</span>\n    </div>\n    <div class=\"workout__details\">\n      <span class=\"workout__icon\">⛰</span>\n      <span class=\"workout__value\">${workout.elevationGain}</span>\n      <span class=\"workout__unit\">m</span>\n    </div>\n  </li> -->\n        `;\n    }\n    form.insertAdjacentHTML(`afterend`, html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEl = e.target.closest(`.workout`);\n\n    if (!workoutEl) return; //guard clause\n\n    const workout = this.#workouts.find(\n      work => work.id === workoutEl.dataset.id\n    );\n\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: {\n        duration: 1,\n      },\n    });\n\n    // using public interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    localStorage.setItem(`workouts`, JSON.stringify(this.#workouts));\n  }\n\n  _getLocalStorage() {\n    const data = JSON.parse(localStorage.getItem(`workouts`));\n\n    if (!data) return;\n\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => {\n      this._renderWorkout(work);\n    });\n  }\n\n  reset() {\n    localStorage.removeItem(`workouts`);\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.810bb8fa.js.map","sourceRoot":"/__parcel_source_root/"}